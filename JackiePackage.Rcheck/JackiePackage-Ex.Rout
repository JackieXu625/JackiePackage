
R version 4.4.1 (2024-06-14 ucrt) -- "Race for Your Life"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "JackiePackage"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> base::assign(".ExTimings", "JackiePackage-Ex.timings", pos = 'CheckExEnv')
> base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
> base::assign(".format_ptime",
+ function(x) {
+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
+   options(OutDec = '.')
+   format(x[1L:3L], digits = 7L)
+ },
+ pos = 'CheckExEnv')
> 
> ### * </HEADER>
> library('JackiePackage')

Attaching package: 'JackiePackage'

The following object is masked from 'package:methods':

    Summary

> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("ANOVA")
> ### * ANOVA
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: ANOVA
> ### Title: ANOVA for Linear Regression Model
> ### Aliases: ANOVA
> 
> ### ** Examples
> 
> # Example data
> data <- data.frame(
+   Age = runif(100, 20, 80),
+   Sex = sample(0:1, 100, replace = TRUE),
+   Depression = rnorm(100, 50, 10)
+ )
> fit_result <- Fit(data, "Depression")
> ANOVA(fit_result)
Analysis of Variance Table
Source     DF   Sum Sq       Mean Sq      F value    Pr(>F)
Age        1    3.38         3.38         0.04       0.8497
Sex        1    9.37         9.37         0.10       0.7523
Residuals  97   9070.82      93.51       
Total      99   9083.57     
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("ANOVA", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("Fit")
> ### * Fit
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: Fit
> ### Title: Perform Linear Regression
> ### Aliases: Fit
> 
> ### ** Examples
> 
> # Example data
> data <- data.frame(
+   Age = runif(100, 20, 80),
+   Sex = sample(0:1, 100, replace = TRUE),
+   Depression = rnorm(100, 50, 10)
+ )
> 
> # Perform linear regression
> result <- Fit(data, "Depression")
> 
> # Print the coefficients
> print(result$coefficients)
           [,1]
    50.00041020
Age -0.01307461
Sex  0.61540422
attr(,"names")
[1] "(Intercept)" "Age"         "Sex"        
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("Fit", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("Predict")
> ### * Predict
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: Predict
> ### Title: Predict Response Using Linear Regression Model
> ### Aliases: Predict
> 
> ### ** Examples
> 
> # Example data
> data <- data.frame(
+   Age = runif(100, 20, 80),
+   Sex = sample(0:1, 100, replace = TRUE),
+   Depression = rnorm(100, 50, 10)
+ )
> 
> # Fit the model
> fit_result <- Fit(data, "Depression")
> 
> # New predictor data
> new_data <- data.frame(
+   Age = c(30, 40, 50),
+   Sex = c(0, 1, 1) 
+ )
> 
> # Predict response values
> predictions <- Predict(fit_result, new_data)
> print(predictions)
[1] 49.60817 50.09283 49.96208
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("Predict", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("Summary")
> ### * Summary
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: Summary
> ### Title: Summary of Linear Regression Model
> ### Aliases: Summary
> 
> ### ** Examples
> 
> # Example data
> data <- data.frame(
+   Age = runif(100, 20, 80),
+   Sex = sample(0:1, 100, replace = TRUE),
+   Depression = rnorm(100, 50, 10)
+ )
> 
> # Fit the model
> result <- Fit(data, "Depression")
> 
> # Generate the summary
> Summary(result)
Coefficients:
             Estimate  Std. Error  t value  Pr(>|t|)
(Intercept)     50.0004     3.3059  15.1248 2.919e-27
Age             -0.0131     0.0607  -0.2153     0.83
Sex              0.6154     1.9440   0.3166   0.7523

Residual standard error: 9.6702 on 97 degrees of freedom
Multiple R-squared: 0.0014, Adjusted R-squared: -0.0192
F-statistic: 0.0682 on 2 and 97 DF, p-value: 0.9342
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("Summary", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.03 0 0.13 NA NA 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
