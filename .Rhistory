Mean_Depression = mean(Depression, na.rm = TRUE),
Percent_Depression = sum(Depression, na.rm = TRUE) / n() * 100
)
print(summary_stats)
View(data)
summary_stats <- data %>%
group_by(Age_Category) %>%
summarise(
Count = n(),
Percent = (n() / nrow(data) * 100),
Mean_Age = mean(Age, na.rm = TRUE),
SD_Age = sd(Age, na.rm = TRUE),
Median_Age = median(Age, na.rm = TRUE),
Min_Age = min(Age, na.rm = TRUE),
Max_Age = max(Age, na.rm = TRUE),
Mean_Depression = mean(Depression, na.rm = TRUE),
)
print(summary_stats)
summary_stats <- data %>%
group_by(Age_Category) %>%
summarise(
Percent = (n() / nrow(data) * 100),
Mean_Age = mean(Age, na.rm = TRUE),
SD_Age = sd(Age, na.rm = TRUE),
Median_Age = median(Age, na.rm = TRUE),
Min_Age = min(Age, na.rm = TRUE),
Max_Age = max(Age, na.rm = TRUE),
Mean_Depression = mean(Depression, na.rm = TRUE),
)
print(summary_stats)
summary_stats <- data %>%
group_by(Age_Category) %>%
summarise(
Count = n(),
Percent = (n() / nrow(data) * 100),
Mean_Age = mean(Age, na.rm = TRUE),
SD_Age = sd(Age, na.rm = TRUE),
Median_Age = median(Age, na.rm = TRUE),
Min_Age = min(Age, na.rm = TRUE),
Max_Age = max(Age, na.rm = TRUE),
Mean_Depression = mean(Depression, na.rm = TRUE),
)
print(summary_stats)
# 中心化和缩放Fatalism
fatalism_centered <- scale(data$Fatalism, center = TRUE, scale = IQR(data$Fatalism, na.rm = TRUE))
# 建立回归模型
model <- lm(Depression ~ factor(Age_Category) + fatalism_centered + factor(Sex) + factor(Race_Ethnicity), data = data)
View(data)
# 中心化和缩放Fatalism
fatalism_centered <- scale(data$Fatalism, center = TRUE, scale = IQR(data$Fatalism, na.rm = TRUE))
# 建立回归模型
model <- lm(Depression ~ factor(Age_Category) + fatalism_centered + factor(Sex) + factor(RE), data = data)
# 中心化和缩放Fatalism
fatalism_centered <- scale(data$Fatalism, center = TRUE, scale = IQR(data$Fatalism, na.rm = TRUE))
# 建立回归模型
model <- lm(Depression ~ factor(Age_Category) + fatalism_centered + factor(Sex) + factor(R_E), data = data)
# 输出模型摘要
summary(model)
fatalism_centered <- scale(data$Fatalism, center = TRUE, scale = IQR(data$Fatalism, na.rm = TRUE))
model <- lm(Depression ~ factor(Age_Category) + fatalism_centered + factor(Sex) + factor(R_E), data = data)
summary(model)
# Fit the full model with age categories
full_model <- lm(Depression ~ factor(Age_Category) + fatalism_centered + factor(Sex) + factor(Race_Ethnicity), data = data)
# Fit the full model with age categories
full_model <- lm(Depression ~ factor(Age_Category) + fatalism_centered + factor(Sex) + factor(R_E), data = data)
# Fit the reduced model without age categories
reduced_model <- lm(Depression ~ fatalism_centered + factor(Sex) + factor(Race_Ethnicity), data = data)
# Fit the full model with age categories
full_model <- lm(Depression ~ factor(Age_Category) + fatalism_centered + factor(Sex) + factor(R_E), data = data)
# Fit the reduced model without age categories
reduced_model <- lm(Depression ~ fatalism_centered + factor(Sex) + factor(R_E), data = data)
# Perform an F-test to compare the two models
anova_result <- anova(reduced_model, full_model)
print(anova_result)
model1 <- lm(Depression ~ data$Age_Score + fatalism_centered + factor(Sex) + factor(R_E), data = data)
model1 <- lm(Depression ~ data$Age_Category + fatalism_centered + factor(Sex) + factor(R_E), data = data)
summary(model1)
score <- as_numeric(Age_Category)
score <- as.numeric(Age_Category)
score <- as.numeric(data$Age_Category)
model1 <- lm(Depression ~ score + fatalism_centered + factor(Sex) + factor(R_E), data = data)
summary(model1)
model2 <- lm(Depression ~ Age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
library("sas7bdat")
library(dplyr)
library(broom)
model2 <- lm(Depression ~ Age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
coefficients_c <- tidy(model)
install.packages("broom")
library("sas7bdat")
library(dplyr)
library(broom)
model2 <- lm(Depression ~ Age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
coefficients_c <- tidy(model)
coefficients_e <- tidy(model1)
coefficients_continuous <- tidy(model2)
model2 <- lm(Depression ~ Age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
coefficients_c <- tidy(model)
coefficients_e <- tidy(model1)
coefficients_continuous <- tidy(model2)
coefficients_comparison <- bind_rows(
select(coefficients_c, term, estimate) %>% mutate(Model = "Age as Category"),
select(coefficients_e, term, estimate) %>% mutate(Model = "Age as Score"),
select(coefficients_continuous, term, estimate) %>% mutate(Model = "Age Continuous")
) %>% spread(key = Model, value = estimate)
library("sas7bdat")
library(dplyr)
library(broom)
model2 <- lm(Depression ~ Age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
coefficients_c <- tidy(model)
coefficients_e <- tidy(model1)
coefficients_continuous <- tidy(model2)
coefficients_comparison <- bind_rows(
select(coefficients_c, term, estimate) %>% mutate(Model = "Age as Category"),
select(coefficients_e, term, estimate) %>% mutate(Model = "Age as Score"),
select(coefficients_continuous, term, estimate) %>% mutate(Model = "Age Continuous")
) %>% spread(key = Model, value = estimate)
model2 <- lm(Depression ~ Age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
coefficients_c <- tidy(model)
coefficients_e <- tidy(model1)
coefficients_continuous <- tidy(model2)
coefficients_comparison <- bind_rows(
coefficients_merged <- coefficients_c %>%
select(term, estimate_c = estimate) %>%
left_join(coefficients_e %>% select(term, estimate_e = estimate), by = "term") %>%
left_join(coefficients_continuous %>% select(term, estimate_continuous = estimate), by = "term")
# View the merged coefficient table
print(coefficients_merged)
model2 <- lm(Depression ~ Age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
coefficients_c <- tidy(model)
coefficients_e <- tidy(model1)
coefficients_continuous <- tidy(model2)
coefficients_comparison <- bind_rows(
coefficients_merged <- coefficients_c %>%
select(term, estimate_c = estimate) %>%
left_join(coefficients_e %>% select(term, estimate_e = estimate), by = "term") %>%
left_join(coefficients_continuous %>% select(term, estimate_continuous = estimate), by = "term")
print(coefficients_merged)
model2 <- lm(Depression ~ Age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
coefficients_c <- tidy(model)
coefficients_e <- tidy(model1)
coefficients_continuous <- tidy(model2)
coefficients_comparison <- bind_rows(
coefficients_merged <- coefficients_c %>%
select(term, estimate_c = estimate) %>%
left_join(coefficients_e %>% select(term, estimate_e = estimate), by = "term") %>%
left_join(coefficients_continuous %>% select(term, estimate_continuous = estimate), by = "term")
print(coefficients_merged)
model2 <- lm(Depression ~ Age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
coefficients_c <- tidy(model)
coefficients_e <- tidy(model1)
coefficients_continuous <- tidy(model2)
coefficients_comparison <- bind_rows(
coefficients_merged <- coefficients_c_prepared %>%
left_join(coefficients_e_prepared, by = "term") %>%
left_join(coefficients_continuous_prepared, by = "term")
# Print the merged coefficients table
print(coefficients_merged)
model2 <- lm(Depression ~ Age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
coefficients_c <- tidy(model)
coefficients_e <- tidy(model1)
coefficients_continuous <- tidy(model2)
coefficients_merged <- coefficients_c_prepared %>%
left_join(coefficients_e_prepared, by = "term") %>%
left_join(coefficients_continuous_prepared, by = "term")
model2 <- lm(Depression ~ Age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
coefficients_c <- tidy(model)
coefficients_e <- tidy(model1)
coefficients_continuous <- tidy(model2)
coefficients_c_prepared <- coefficients_c %>% select(term, estimate_c = estimate)
coefficients_e_prepared <- coefficients_e %>% select(term, estimate_e = estimate)
coefficients_continuous_prepared <- coefficients_continuous %>% select(term, estimate_continuous = estimate)
coefficients_merged <- coefficients_c_prepared %>%
left_join(coefficients_e_prepared, by = "term") %>%
left_join(coefficients_continuous_prepared, by = "term")
# Print the merged coefficients table
print(coefficients_merged)
model2 <- lm(Depression ~ Age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
coef1 = summary(model)$coefficients
coef2 = summary(model1)$coefficients
coef3 = summary(model2)$coefficients
model2 <- lm(Depression ~ Age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
coef1 = summary(model)$coefficients
coef2 = summary(model1)$coefficients
coef3 = summary(model2)$coefficients
getsumm = function(k){
out=data.frame(t(cbind(coef1[k,],coef2[k,],cief3[k,])))
out$'Diff(%$)from coef where age is continuous'=round((out$estimate - out$Estimate[3])/ out$Estimate[3]*100, 2)
colnames(out)[1:4]=c(dimnames(coef1)[[2]])
rownames(out)=c("Age dummy","Age ordinal score","Age continous")
return(out)
}
FatalismC.sum=getsumm(2)
model2 <- lm(Depression ~ Age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
coef1 = summary(model)$coefficients
coef2 = summary(model1)$coefficients
coef3 = summary(model2)$coefficients
getsumm = function(k){
out=data.frame(t(cbind(coef1[k,],coef2[k,],coef3[k,])))
out$'Diff(%$)from coef where age is continuous'=round((out$estimate - out$Estimate[3])/ out$Estimate[3]*100, 2)
colnames(out)[1:4]=c(dimnames(coef1)[[2]])
rownames(out)=c("Age dummy","Age ordinal score","Age continous")
return(out)
}
FatalismC.sum=getsumm(2)
model2 <- lm(Depression ~ Age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
coef1 = summary(model)$coefficients
coef2 = summary(model1)$coefficients
coef3 = summary(model2)$coefficients
getsumm = function(k) {
# Ensure that the term exists in all model summaries to avoid errors
if (!is.na(coef1[k,]) & !is.na(coef2[k,]) & !is.na(coef3[k,])) {
out = data.frame(t(cbind(coef1[k,], coef2[k,], coef3[k,])))
out$'Diff(%) from coef where age is continuous' = round((out$Estimate.1 - out$Estimate.3) / out$Estimate.3 * 100, 2)
colnames(out)[1:4] = c("Estimate", "Std. Error", "t value", "Pr(>|t|)")
rownames(out) = c("Age dummy", "Age ordinal score", "Age continuous")
return(out)
} else {
return(NULL)  # Return NULL if the term does not exist in any model summary
}
}
# Applying the function to different coefficients
FatalismC_sum = getsumm("fatalism_centered")  # Replace "fatalism_centered" with the exact term if different
model2 <- lm(Depression ~ Age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
coef1 = summary(model)$coefficients
coef2 = summary(model1)$coefficients
coef3 = summary(model2)$coefficients
getsumm = function(k){
out=data.frame(t(cbind(coef1[k,],coef2[k,],coef3[k,])))
out$'Diff(%$) from coef where age is continuous'=round((out$estimate - out$Estimate[3])/ out$Estimate[3]*100, 2)
colnames(out)[1:4]=c(dimnames(coef1)[[2]])
rownames(out)=c("Age dummy","Age ordinal score","Age continous")
return(out)
}
FatalismC.sum=getsumm(2)
model2 <- lm(Depression ~ Age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
coef1 = summary(model)$coefficients
coef2 = summary(model1)$coefficients
coef3 = summary(model2)$coefficients
getsumm = function(k){
out=data.frame(t(cbind(coef1[k,],coef2[k,],coef3[k,])))
out$'Diff(%$) from coef where age is continuous'=round((out$estimate - out$Estimate[3])/ out$Estimate[3]*100, 2)
colnames(out)[1:4]=c(dimnames(coef1)[[2]])
rownames(out)=c("Age dummy","Age ordinal score","Age continous")
return(out)
}
FatalismC.sum=getsumm(2)
model2 <- lm(Depression ~ Age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
coef1 = summary(model)$coefficients
coef2 = summary(model1)$coefficients
coef3 = summary(model2)$coefficients
getsumm = function(k){
out=data.frame(t(cbind(coef1[k,],coef2[k,],coef3[k,])))
out$'Diff(%$) from coef where age is continuous'=round((out$estimate - out$Estimate[3])/ out$Estimate[3]*100, 2)
colnames(out)[1:4]=c(dimnames(coef1)[[2]])
rownames(out)=c("Age dummy","Age ordinal score","Age continous")
return(out)
}
FatalismC.sum=getsumm(2)
model2 <- lm(Depression ~ Age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
coef1 = summary(model)$coefficients
coef2 = summary(model1)$coefficients
coef3 = summary(model2)$coefficients
getsumm = function(k){
out=data.frame(t(cbind(coef1[k,],coef2[k,],coef3[k,])))
out$'Diff(%$) from coef where age is continuous'=round((out$estimate - out$Estimate[3])/ out$Estimate[3]*100, 2)
colnames(out)[1:4]=c(dimnames(coef1)[[2]])
rownames(out)=c("Age dummy","Age ordinal score","Age continous")
return(out)
}
FatalismC.sum=getsumm(2)
model2 <- lm(Depression ~ Age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
coef1 = summary(model)$coefficients
coef2 = summary(model1)$coefficients
coef3 = summary(model2)$coefficients
getsumm = function(k){
out=data.frame(t(cbind (coef1[k,],coef2[k,],coef3[k,])))
out$'Diff(%$) from coef where age is continuous'=round((out$estimate - out$Estimate[3])/ out$Estimate[3]*100, 2)
colnames(out)[1:4]=c(dimnames(coef1)[[2]])
rownames(out)=c("Age dummy","Age ordinal score","Age continous")
return(out)
}
FatalismC.sum=getsumm(2)
model2 <- lm(Depression ~ Age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
coefficients_model <- coef(model)[c("fatalism_centered", "factor(Sex)1", "factor(R_E)1")]
coefficients_model1 <- coef(model1)[c("fatalism_centered", "factor(Sex)1", "factor(R_E)1")]
coefficients_model2 <- coef(model2)[c("fatalism_centered", "factor(Sex)1", "factor(R_E)1")]
# Create a data frame for comparison
comparison_table <- data.frame(
Coefficients = c("Fatalism_centered", "Sex (Male)", "Race/Ethnicity 1"),
Model_Categorical = coefficients_model,
Model_Scored = coefficients_model1,
Model_Continuous = coefficients_model2
)
# Print the comparison table
print(comparison_table)
model2 <- lm(Depression ~ Age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
coefficients_model <- coef(model)[c("fatalism_centered", "factor(Sex)1", "factor(R_E)1")]
coefficients_model1 <- coef(model1)[c("fatalism_centered", "factor(Sex)1", "factor(R_E)1")]
coefficients_model2 <- coef(model2)[c("fatalism_centered", "factor(Sex)1", "factor(R_E)1")]
# Create a data frame for comparison
comparison_table <- data.frame(
Coefficients = c("Fatalism", "Sex ", "Race/Ethnicity"),
Model_Categorical = coefficients_model,
Model_Scored = coefficients_model1,
Model_Continuous = coefficients_model2
)
# Print the comparison table
print(comparison_table)
data$score_10_20_30 <- as.numeric(data$Age_Category) * 10
data$score_10_20_300 <- as.numeric(data$Age_Category)
data$score_10_20_300[data$score_10_20_300 == 3] <- 30
data$score_10_20_300 <- data$score_10_20_300 * 10
# Scoring as the average age in each category (from descriptive statistics in (b))
# Example placeholder for average ages; replace these with actual values from (b)
average_ages <- c(45, 55, 65, 75)  # Replace with the actual means from each category
data$score_avg_age <- as.numeric(data$Age_Category)
data$score_avg_age[data$score_avg_age == 0] <- average_ages[1]
data$score_avg_age[data$score_avg_age == 1] <- average_ages[2]
data$score_avg_age[data$score_avg_age == 2] <- average_ages[3]
data$score_avg_age[data$score_avg_age == 3] <- average_ages[4]
# Fit the regression models and extract p-values for the age scores
# Model with score 0, 10, 20, 30
model_10_20_30 <- lm(Depression ~ score_10_20_30 + fatalism_centered + factor(Sex) + factor(R_E), data = data)
p_value_10_20_30 <- summary(model_10_20_30)$coefficients["score_10_20_30", "Pr(>|t|)"]
# Model with score 0, 10, 20, 300
model_10_20_300 <- lm(Depression ~ score_10_20_300 + fatalism_centered + factor(Sex) + factor(R_E), data = data)
p_value_10_20_300 <- summary(model_10_20_300)$coefficients["score_10_20_300", "Pr(>|t|)"]
# Model with average ages as scores
model_avg_age <- lm(Depression ~ score_avg_age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
p_value_avg_age <- summary(model_avg_age)$coefficients["score_avg_age", "Pr(>|t|)"]
# Print the p-values
p_values <- data.frame(
Score_Variables = c("0, 10, 20, 30", "0, 10, 20, 300", "Average Ages"),
P_Values = c(p_value_10_20_30, p_value_10_20_300, p_value_avg_age)
)
print(p_values)
# Example of assigning different scores to age categories and fitting models
# Assuming the dataset 'data' and the variable 'Age_Category' have been defined
# Assign the different age scores
data$score_0_10_20_30 <- as.numeric(data$Age_Category) * 10
data$score_0_10_20_300 <- c(0, 10, 20, 300)[as.numeric(data$Age_Category) + 1]
# Calculate average age for each category based on part (b)
average_ages <- tapply(data$Age, data$Age_Category, mean)
data$score_avg_age <- average_ages[as.numeric(data$Age_Category) + 1]
# Fit models with different scores and extract p-values for age score
model_0_10_20_30 <- lm(Depression ~ score_0_10_20_30 + fatalism_centered + factor(Sex) + factor(R_E), data = data)
p_val_0_10_20_30 <- summary(model_0_10_20_30)$coefficients["score_0_10_20_30", "Pr(>|t|)"]
model_0_10_20_300 <- lm(Depression ~ score_0_10_20_300 + fatalism_centered + factor(Sex) + factor(R_E), data = data)
p_val_0_10_20_300 <- summary(model_0_10_20_300)$coefficients["score_0_10_20_300", "Pr(>|t|)"]
model_avg_age <- lm(Depression ~ score_avg_age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
p_val_avg_age <- summary(model_avg_age)$coefficients["score_avg_age", "Pr(>|t|)"]
# Summarize results
p_values <- data.frame(
Score_Type = c("0, 10, 20, 30", "0, 10, 20, 300", "Average Age in Category"),
P_Value = c(p_val_0_10_20_30, p_val_0_10_20_300, p_val_avg_age)
)
print(p_values)
# Assume 'data' is your dataframe and 'Age_Category' is already defined
data$Score_0_10_20_30 <- with(data, ifelse(Age_Category == 0, 0, ifelse(Age_Category == 1, 10, ifelse(Age_Category == 2, 20, 30))))
data$Score_0_10_20_300 <- with(data, ifelse(Age_Category == 0, 0, ifelse(Age_Category == 1, 10, ifelse(Age_Category == 2, 20, 300))))
# Assuming you have the average ages for each category
data$Score_Average_Age <- with(data, ifelse(Age_Category == 0, avg_age_0, ifelse(Age_Category == 1, avg_age_1, ifelse(Age_Category == 2, avg_age_2, avg_age_3))))
# Assume 'data' is your DataFrame and has the necessary variables
# Create new score variables
data$score_0_10_20_30 <- as.numeric(recode(data$Age_Category, `0`=0, `1`=10, `2`=20, `3`=30))
data$score_0_10_20_300 <- as.numeric(recode(data$Age_Category, `0`=0, `1`=10, `2`=20, `3`=300))
# Calculate average ages for each category if not already provided
# Example averages might be:
# Category 0: 45, Category 1: 55, Category 2: 65, Category 3: 75
# These are placeholders and should be replaced with actual computed averages
data$score_average_age <- as.numeric(recode(data$Age_Category, `0`=45, `1`=55, `2`=65, `3`=75))
# Fit models
model_10_20_30 <- lm(Depression ~ score_0_10_20_30 + fatalism_centered + factor(Sex) + factor(R_E), data = data)
model_10_20_300 <- lm(Depression ~ score_0_10_20_300 + fatalism_centered + factor(Sex) + factor(R_E), data = data)
model_average_age <- lm(Depression ~ score_average_age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
# Get p-values
p_value_10_20_30 <- summary(model_10_20_30)$coefficients["score_0_10_20_30", 4]
p_value_10_20_300 <- summary(model_10_20_300)$coefficients["score_0_10_20_300", 4]
p_value_average_age <- summary(model_average_age)$coefficients["score_average_age", 4]
# Print p-values
print(p_value_10_20_30)
print(p_value_10_20_300)
print(p_value_average_age)
data$score_0_10_20_30 <- as.numeric(recode(data$Age_Category, `0`=0, `1`=10, `2`=20, `3`=30))
data$score_0_10_20_300 <- as.numeric(recode(data$Age_Category, `0`=0, `1`=10, `2`=20, `3`=300))
data$score_average_age <- as.numeric(recode(data$Age_Category, `0`=51.49359, `1`=60.0443, `2`=71.06289, `3`=82.7554))
# Fit models
model_10_20_30 <- lm(Depression ~ score_0_10_20_30 + fatalism_centered + factor(Sex) + factor(R_E), data = data)
model_10_20_300 <- lm(Depression ~ score_0_10_20_300 + fatalism_centered + factor(Sex) + factor(R_E), data = data)
model_average_age <- lm(Depression ~ score_average_age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
# Get p-values
p_value_10_20_30 <- summary(model_10_20_30)$coefficients["score_0_10_20_30", 4]
p_value_10_20_300 <- summary(model_10_20_300)$coefficients["score_0_10_20_300", 4]
p_value_average_age <- summary(model_average_age)$coefficients["score_average_age", 4]
# Print p-values
print(p_value_10_20_30)
print(p_value_10_20_300)
print(p_value_average_age)
data$score_0_10_20_30 <- as.numeric(recode(data$Age_Category, `0`=0, `1`=10, `2`=20, `3`=30))
data$score_0_10_20_300 <- as.numeric(recode(data$Age_Category, `0`=0, `1`=10, `2`=20, `3`=300))
data$score_average_age <- as.numeric(recode(data$Age_Category, `0`=51.49359, `1`=60.0443, `2`=71.06289, `3`=82.7554))
model_10_20_30 <- lm(Depression ~ score_0_10_20_30 + fatalism_centered + factor(Sex) + factor(R_E), data = data)
model_10_20_300 <- lm(Depression ~ score_0_10_20_300 + fatalism_centered + factor(Sex) + factor(R_E), data = data)
model_average_age <- lm(Depression ~ score_average_age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
p_value_10_20_30 <- summary(model_10_20_30)$coefficients["score_0_10_20_30", 4]
p_value_10_20_300 <- summary(model_10_20_300)$coefficients["score_0_10_20_300", 4]
p_value_average_age <- summary(model_average_age)$coefficients["score_average_age", 4]
print(p_value_10_20_30)
print(p_value_10_20_300)
print(p_value_average_age)
data$score_0_10_20_30 <- as.numeric(recode(data$Age_Category, `0`=0, `1`=10, `2`=20, `3`=30))
data$score_0_10_20_300 <- as.numeric(recode(data$Age_Category, `0`=0, `1`=10, `2`=20, `3`=300))
data$score_average_age <- as.numeric(recode(data$Age_Category, `0`=51.5, `1`=60, `2`=71.1, `3`=82.8))
model_10_20_30 <- lm(Depression ~ score_0_10_20_30 + fatalism_centered + factor(Sex) + factor(R_E), data = data)
model_10_20_300 <- lm(Depression ~ score_0_10_20_300 + fatalism_centered + factor(Sex) + factor(R_E), data = data)
model_average_age <- lm(Depression ~ score_average_age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
p_value_10_20_30 <- summary(model_10_20_30)$coefficients["score_0_10_20_30", 4]
p_value_10_20_300 <- summary(model_10_20_300)$coefficients["score_0_10_20_300", 4]
p_value_average_age <- summary(model_average_age)$coefficients["score_average_age", 4]
print(p_value_10_20_30)
print(p_value_10_20_300)
print(p_value_average_age)
data$score_0_10_20_30 <- as.numeric(recode(data$Age_Category, `0`=0, `1`=10, `2`=20, `3`=30))
data$score_0_10_20_300 <- as.numeric(recode(data$Age_Category, `0`=0, `1`=10, `2`=20, `3`=300))
data$score_average_age <- as.numeric(recode(data$Age_Category, `0`=51.49359, `1`=60.0443, `2`=71.06289, `3`=82.7554))
model_10_20_30 <- lm(Depression ~ score_0_10_20_30 + fatalism_centered + factor(Sex) + factor(R_E), data = data)
model_10_20_300 <- lm(Depression ~ score_0_10_20_300 + fatalism_centered + factor(Sex) + factor(R_E), data = data)
model_average_age <- lm(Depression ~ score_average_age + fatalism_centered + factor(Sex) + factor(R_E), data = data)
p_value_10_20_30 <- summary(model_10_20_30)$coefficients["score_0_10_20_30", 4]
p_value_10_20_300 <- summary(model_10_20_300)$coefficients["score_0_10_20_300", 4]
p_value_average_age <- summary(model_average_age)$coefficients["score_average_age", 4]
print(p_value_10_20_30)
print(p_value_10_20_300)
print(p_value_average_age)
# Centering and scaling fatalism
data$fatalism_centered_scaled <- (data$fatalism - 17) / 8.5
# Centering and scaling fatalism
data$fatalism_centered_scaled <- (data$Fatalism - 17) / 8.5
# Fit the regression model
model <- lm(depression ~ fatalism_centered_scaled * Sex + Age + R_E, data = data)
# Centering and scaling fatalism
data$fatalism_centered_scaled <- (data$Fatalism - 17) / 8.5
# Fit the regression model
model <- lm(Depression ~ fatalism_centered_scaled * Sex + Age + R_E, data = data)
# Summary of the model to view coefficients and statistics
summary(model)
# Get the summary of the model
model_summary <- summary(model)
# Extracting the specific parameter for the interaction term
interaction_coefficient <- coef(model_summary)["fatalism_centered_scaled:sex", ]
# Centering and scaling fatalism
data$fatalism_centered_scaled <- (data$Fatalism - 17) / 8.5
# Fit the regression model
model <- lm(Depression ~ fatalism_centered_scaled * Sex + Age + R_E, data = data)
# Summary of the model to view coefficients and statistics
summary(model)
# Get the summary of the model
model_summary <- summary(model)
# Extracting the specific parameter for the interaction term
interaction_coefficient <- coef(model_summary)["fatalism_centered_scaled:Sex", ]
# Extract and display the relevant details
test_statistic <- interaction_coefficient["t value"]
p_value <- interaction_coefficient["Pr(>|t|)"]
degrees_of_freedom <- model_summary$df[2]  # Residual degrees of freedom
# Print results
cat("Test Statistic:", test_statistic, "\n")
cat("P-value:", p_value, "\n")
cat("Degrees of Freedom:", degrees_of_freedom, "\n")
# Decision on hypothesis
if (p_value < 0.05) {
cat("Reject the null hypothesis: There is a significant difference in the fatalism-depression relationship by sex.\n")
} else {
cat("Do not reject the null hypothesis: There is no significant difference in the fatalism-depression relationship by sex.\n")
}
data$fatalism_centered_scaled <- (data$Fatalism - 17) / 8.5
model <- lm(Depression ~ fatalism_centered_scaled * Sex + Age + R_E, data = data)
summary(model)
model_summary <- summary(model)
var_cov_matrix <- vcov(model)
data$fatalism_centered_scaled <- (data$Fatalism - 17) / 8.5
model <- lm(Depression ~ fatalism_centered_scaled * Sex + Age + R_E, data = data)
summary(model)
var_cov_matrix <- vcov(model)
var_cov_matrix <- vcov(model)
var_cov_matrix
# Constants
alpha <- 0.05
df <- 606
t_value <- qt(1 - alpha/2, df)
# Point estimates
estimate_female <- 1.54586
estimate_male <- 1.54586 + 1.32511
# Standard Errors
se_female <- 0.45004
se_male_interaction <- 0.65788
# Confidence Intervals
ci_female_lower <- estimate_female - t_value * se_female
ci_female_upper <- estimate_female + t_value * se_female
ci_male_lower <- estimate_male - t_value * sqrt(se_female^2 + se_male_interaction^2)
ci_male_upper <- estimate_male + t_value * sqrt(se_female^2 + se_male_interaction^2)
# Display the results
cat("Female Point Estimate:", estimate_female, "\n")
cat("Female Confidence Interval: [", ci_female_lower, ",", ci_female_upper, "]\n")
cat("Male Point Estimate:", estimate_male, "\n")
cat("Male Confidence Interval: [", ci_male_lower, ",", ci_male_upper, "]\n")
install.packages("usethis")
setwd("C:/Users/Jianyi Xu/Desktop/新建文件夹")
install.packages("usethis")
usethis::create_package
usethis::create_package("Users\\Jianyi Xu\\Desktop")
usethis::create_package("C:\\Users\\Jianyi Xu\\Desktop")
